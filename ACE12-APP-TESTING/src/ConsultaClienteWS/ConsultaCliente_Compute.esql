DECLARE ns NAMESPACE 'http://bcp.com.pe/ClienteWSDL/';

CREATE COMPUTE MODULE ConsultaCliente_Compute
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
    -- Extraer valores del request
    DECLARE idClienteInput INTEGER;
    DECLARE usuarioInput CHARACTER;
    DECLARE nombreCliente CHARACTER;
    DECLARE apellidoCliente CHARACTER;
    
    -- Leer valores desde la solicitud
    
    SET idClienteInput =InputRoot.XMLNSC.ns:SolicitudClienteRequest.idCliente;
    SET usuarioInput = InputRoot.XMLNSC.ns:SolicitudClienteRequest.usuario;

    -- Validar idCliente esperado (ejemplo: 123456789)
    IF TRIM(CAST(idClienteInput AS CHARACTER)) <> '123456789' THEN

        -- Si el idCliente no es válido, retornar error
        SET OutputRoot.XMLNSC.soapenv:Envelope.soapenv:Body.NS1:SolicitudClienteResponse.NS3:Status.NS3:StatusCode = 1;
        SET OutputRoot.XMLNSC.soapenv:Envelope.soapenv:Body.NS1:SolicitudClienteResponse.NS3:Status.NS3:Severity = 'Error';
        SET OutputRoot.XMLNSC.soapenv:Envelope.soapenv:Body.NS1:SolicitudClienteResponse.NS3:Status.NS3:StatusDesc = 'ID Cliente no válido';
        RETURN TRUE;
    END IF;
    -- Separar el usuario en nombre y apellido (asumiendo formato "Nombre Apellido")
    IF POSITION(' ' IN usuarioInput) > 0 THEN
        SET nombreCliente = LEFT(usuarioInput, POSITION(' ' IN usuarioInput) - 1);
        SET apellidoCliente = RIGHT(usuarioInput, LENGTH(usuarioInput) - POSITION(' ' IN usuarioInput));
    ELSE
        SET nombreCliente = usuarioInput; -- Si no hay apellido, solo asigna el nombre
        SET apellidoCliente = '';
    END IF;
    -- Construir la respuesta SOAP
    SET OutputRoot.XMLNSC.soapenv:Envelope.(XMLNSC.NamespaceDecl)soapenv = 'http://schemas.xmlsoap.org/soap/envelope/';
    SET OutputRoot.XMLNSC.soapenv:Envelope.soapenv:Body.NS1:SolicitudClienteResponse.(XMLNSC.NamespaceDecl)NS1 = 'http://bcp.com.pe/ClienteWSDL/';
    SET OutputRoot.XMLNSC.soapenv:Envelope.soapenv:Body.NS1:SolicitudClienteResponse.NS3:Status.(XMLNSC.NamespaceDecl)NS3 = 'http://bcp.com.pe/Status/';

    -- Agregar estado de éxito
    SET OutputRoot.XMLNSC.soapenv:Envelope.soapenv:Body.NS1:SolicitudClienteResponse.NS3:Status.NS3:StatusCode = 0;
    SET OutputRoot.XMLNSC.soapenv:Envelope.soapenv:Body.NS1:SolicitudClienteResponse.NS3:Status.NS3:Severity = 'Info';
    SET OutputRoot.XMLNSC.soapenv:Envelope.soapenv:Body.NS1:SolicitudClienteResponse.NS3:Status.NS3:StatusDesc = 'Transacción Exitosa';

    -- Agregar datos del cliente
    SET OutputRoot.XMLNSC.soapenv:Envelope.soapenv:Body.NS1:SolicitudClienteResponse.idCliente = idClienteInput;
    SET OutputRoot.XMLNSC.soapenv:Envelope.soapenv:Body.NS1:SolicitudClienteResponse.nombreCliente = nombreCliente;
    SET OutputRoot.XMLNSC.soapenv:Envelope.soapenv:Body.NS1:SolicitudClienteResponse.apellidoCliente = apellidoCliente;

    RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;
.3333
